#use v8runner
Перем НомерПотока;
Перем ИмяЛогФайла;

Процедура run1(ЧислоИтераций)
    Для Нпп = 1 По ЧислоИтераций Цикл
        пп = Прав("000"+Нпп, 3);
        ДописатьВЛогФайл("[" + НомерПотока + "] " + пп);
//        Сообщить("[" + НомерПотока + "] " + пп + ": " + ТекущаяДата());
        Приостановить(3000);
    КонецЦикла;
    Сообщить("[ Завершено ]");
КонецПроцедуры

// Процедура run(ПараметрыКомСтроки)
// КонецПроцедуры

Процедура ДописатьВЛогФайл(СтрокаВЛогФайл, Уровень = 0) Экспорт
	Если ПустаяСтрока(СтрокаВЛогФайл) Тогда
		Возврат;
	КонецЕсли;
	Рапорт 	= Строка(ТекущаяДата()) +" {"+Уровень+"}"+ Символы.Таб + СтрокаВЛогФайл;
    Протокол = Новый ЗаписьТекста(ИмяЛогФайла, "utf-8",, Истина);
	Протокол.ЗаписатьСтроку(Рапорт);
	Протокол.Закрыть();
КонецПроцедуры

Функция ПолучитьКонтекстыИБ()
    Контексты = Новый Массив;
    Контексты.Добавить(Новый Структура("Адрес", "/F C:\\bases\\uat.tst "));
    Контексты.Добавить(Новый Структура("Адрес", "/F C:\\bases\\ДО "));
    Контексты.Добавить(Новый Структура("Адрес", "/F C:\bases\podrazd.KISU  "));
    Возврат Контексты;
КонецФункции
////////////////////////// *** //////////////////////////
Если АргументыКоманднойСтроки.Количество() = 2 Тогда
    НомерПотока = АргументыКоманднойСтроки[0];
    ЧислоПовторовЦикла = Число(АргументыКоманднойСтроки[1]);
    ИмяЛогФайла = "log_"+НомерПотока+".log";
    УдалитьФайлы(ИмяЛогФайла);
    Старт = ТекущаяДата();
    ДописатьВЛогФайл("***["+НомерПотока+"] start ("+ЧислоПовторовЦикла+")");
	Конфигуратор = Новый УправлениеКонфигуратором();
	Конфигуратор.УстановитьКонтекст(ПолучитьКонтекстыИБ()[НомерПотока - 1].Адрес,"admin", "kzueirf");
	ПараметрыЗапуска = Конфигуратор.ПолучитьПараметрыЗапуска();
	ПараметрыЗапуска.Добавить("/DumpCfg ""cfg_"+НомерПотока+".cf""");
	ПараметрыЗапуска.Добавить("/Out""log_"+НомерПотока+".log""");


    // Для Каждого аа Из ПараметрыЗапуска Цикл
    //     Сообщить(аа);
    // КонецЦикла;


	Попытка
		Конфигуратор.ВыполнитьКоманду(ПараметрыЗапуска);
	Исключение
		Сообщить(Конфигуратор.ВыводКоманды());
	КонецПопытки;


//    run(ЧислоПовторовЦикла);
    Сообщить("***["+НомерПотока+"] finish ("+Цел(ТекущаяДата()-Старт)+" сек.)");
КонецЕсли;